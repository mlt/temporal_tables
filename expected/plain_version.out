CREATE TABLE plain_version (id bigint generated always as identity, name text not null, version bigint generated by default as identity);
CREATE TABLE plain_version_history (like plain_version);
CREATE TRIGGER versioning_trigger
BEFORE INSERT OR UPDATE OR DELETE ON plain_version
FOR EACH ROW EXECUTE PROCEDURE versioning('version', 'plain_version_history', NULL);
INSERT INTO plain_version(name) VALUES ('aaa');
UPDATE plain_version SET name='bbb' WHERE id=1;
UPDATE plain_version SET name='ccc', version=4 WHERE id=1;
SELECT * FROM plain_version;
 id | name | version 
----+------+---------
  1 | ccc  |       4
(1 row)

SELECT * FROM plain_version_history;
 id | name | version 
----+------+---------
  1 | aaa  |       1
  1 | bbb  |       2
(2 rows)

CREATE TABLE plain_version2 (id bigint generated always as identity, name text not null, effective_from timestamptz not null default now());
CREATE TABLE plain_version2_history (like plain_version2);
CREATE TRIGGER versioning_trigger
BEFORE INSERT OR UPDATE OR DELETE ON plain_version2
FOR EACH ROW EXECUTE PROCEDURE versioning('effective_from', 'plain_version2_history', NULL);
INSERT INTO plain_version2(name) VALUES ('aaa');
UPDATE plain_version2 SET name='bbb' WHERE id=1;
UPDATE plain_version2 SET name='ccc', effective_from='Infinity'::timestamptz WHERE id=1;
SELECT count(*) FROM plain_version2 WHERE effective_from>now();
 count 
-------
     1
(1 row)

SELECT count(distinct effective_from) FROM plain_version2_history;
 count 
-------
     2
(1 row)

